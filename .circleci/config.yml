version: "2.1"

definitions:
  pwd: &pwd ~/tickety-tick

executors:
  base:
    docker:
      - image: cimg/node:lts
    working_directory: *pwd
  swift:
    docker:
      - image: swift:5.4
    working_directory: *pwd

commands:
  restore_pwd:
    description: Restore working directory
    steps:
      - restore_cache:
          key: pwd-{{ .Environment.CIRCLE_SHA1 }}

  save_pwd:
    description: Save working directory
    steps:
      - save_cache:
          key: pwd-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - *pwd

  restore_deps:
    description: Restore dependencies
    steps:
      - restore_cache:
          key: dependency-cache-{{ arch }}-{{ checksum "yarn.lock" }}

  save_deps:
    description: Save dependencies
    steps:
      - save_cache:
          key: dependency-cache-{{ arch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

jobs:
  setup:
    executor: base
    steps:
      - checkout
      - restore_deps
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - save_deps
      - save_pwd

  lint:
    executor: base
    steps:
      - restore_pwd
      - run:
          name: Run Linter
          command: yarn lint --format junit -o reports/eslint/results.xml
      - store_test_results:
          path: reports

  stylelint:
    executor: base
    steps:
      - restore_pwd
      - run:
          name: Run SCSS Linter
          command: mkdir -p reports/stylelint && yarn stylelint --custom-formatter node_modules/stylelint-junit-formatter -o reports/stylelint/results.xml
      - store_test_results:
          path: reports

  typecheck:
    executor: base
    steps:
      - restore_pwd
      - run:
          name: Run tsc
          command: yarn typecheck

  test:
    executor: base
    steps:
      - restore_pwd
      - run:
          name: Run Tests
          command: yarn test --maxWorkers=2 --ci --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: reports/jest/results.xml
      - store_test_results:
          path: reports

  swiftformat:
    executor: swift
    steps:
      - restore_cache:
          keys:
            - swiftformat-cache-{{ arch }}
      - run:
          name: Install SwiftFormat
          command: |
            VERSION="0.48.11"

            type "swiftformat" >/dev/null 2>&1 && [[ "$(swiftformat --version)" == "$VERSION" ]] || {
              cd /tmp
              git clone --branch "$VERSION" --depth 1 https://github.com/nicklockwood/SwiftFormat
              cd SwiftFormat
              swift build --configuration release
              BIN="$(swift build --configuration release --show-bin-path)"
              mv $BIN/swiftformat "/usr/local/bin"
            }
      - save_cache:
          key: swiftformat-cache-{{ arch }}
          paths:
            - /usr/local/bin
      - checkout
      - run:
          name: Run SwiftFormat
          command: cd safari && swiftformat --lint .

  build:
    executor: base
    steps:
      - restore_pwd
      - run:
          name: Build
          command: yarn build:firefox

workflows:
  version: 2.1
  checks:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - stylelint:
          requires:
            - setup
      - typecheck:
          requires:
            - setup
      - test:
          requires:
            - setup
      - swiftformat
      - build:
          requires:
            - setup
